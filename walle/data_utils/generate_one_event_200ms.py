import scaper
import numpy as np
import os
import os.path as osp
import json
import glob
import soundfile as sf
import re
import jams
from desed import generate_tsv_from_jams
from desed.logger import DesedError
import csv
import desed
from desed.utils import modify_jams
from desed.generate_synthetic import generate_files_from_jams

def create_folder(fd):
    if not os.path.exists(fd):
        os.makedirs(fd)


def get_part_audio(jams_path, time_trunc=0.2):
    """ Add a value foreground onset of a JAMS generated by scaper (containing a single event)
        Args:
            jams_path: str, the name of the JAMS file to change the background SNR
            slice_seconds: float, value in seconds, value to be added to previous onset

        Returns:
            jams object that has been modified
        """
    jams_obj = jams.load(jams_path)
    ann = jams_obj.annotations.search(namespace='scaper')[0]
    data = ann.data
    for cnt, obs in enumerate(data):
        if obs.value["role"] == "foreground":

            # Changing manually the jams to have the event duration we want
            jams_obj["annotations"][0].data[cnt].value["event_duration"] = time_trunc
            dur = obs.duration
            # Change source time to get a 0.2 randomly
            jams_obj["annotations"][0].data[cnt].value["source_time"] = np.random.rand() * max(dur - time_trunc, 0)
            # Replace duration line, needed to do the del add because of the type of data
            new_obs = jams_obj["annotations"][0].data[cnt]._replace(duration=time_trunc)
            del jams_obj["annotations"][0].data[cnt]
            jams_obj["annotations"][0].data.add(new_obs)

    return jams_obj


if __name__ == '__main__':
    base_soundbank = osp.join("..", "..", "synthetic")

    for subset in ["train", "eval"]:
        soundbank_path = osp.join(base_soundbank, "audio", subset, "soundbank")
        fg_folder = osp.join(soundbank_path, "foreground/")
        bg_folder = osp.join(soundbank_path, "background")

        dataset_path = osp.join("..", "..", "dataset")
        jams_folder = osp.join(dataset_path, "audio", subset, f"one_event_generated")
        outfolder = osp.join(dataset_path, "audio", subset, f"one_event_generated_200ms")
        outtsv = osp.join(dataset_path, "metadata", subset, f"one_event_generated_200ms.tsv")

        list_jams = glob.glob(os.path.join(jams_folder, "*.jams"))
        new_jams = modify_jams(list_jams, get_part_audio, outfolder)

        generate_files_from_jams(new_jams, outfolder)
        generate_tsv_from_jams(new_jams, outtsv)
